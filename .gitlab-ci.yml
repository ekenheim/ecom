# Choose an image that definitely has git and ssh tools
# Or install them in before_script if using docker:latest
# Example using alpine/git:
# default:
#   image: alpine/git:latest

variables:
  # GIT_STRATEGY: clone # Keep this if you want a fresh clone each time
  # Use the internal SSH address of the gitlab-shell service
  # Format: ssh://git@<service-name>.<namespace>.svc.cluster.local:<port>/<group>/<project>.git
  # NOTE: Using 'git' user is standard for GitLab SSH
  CI_SSH_REPOSITORY_URL: ssh://git@gitlab-gitlab-shell.development.svc.cluster.local:22/${CI_PROJECT_PATH}.git
  GIT_DEPTH: 20 # Optional: control clone depth

# ... workflow, stages ...

default:
  image: docker:latest # If using this, you MUST install ssh tools below
  tags:
    - k8s
  before_script:
    # 1. Install SSH client and Git if not present (Needed for docker:latest)
    - apk add --no-cache openssh-client git

    # 2. Setup SSH Agent
    - eval $(ssh-agent -s)

    # 3. Add the private key from the CI/CD variable
    #    Ensure SSH_PRIVATE_KEY variable is configured in GitLab settings
    - echo "$SSH_PRIVATE_KEY" | tr -d '\\r' | ssh-add -

    # 4. Create SSH directory and disable strict host key checking
    #    (Necessary because the runner pod's known_hosts is ephemeral)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\\n\\tStrictHostKeyChecking no\\n\\tUserKnownHostsFile /dev/null" > ~/.ssh/config

    # 5. (Optional but recommended) Add GitLab host key to known_hosts
    #    This avoids the need for StrictHostKeyChecking no, but requires knowing the host key.
    #    You can get the host key from the service IP: ssh-keyscan -p 22 gitlab-gitlab-shell.development.svc.cluster.local
    #    Store the output in another CI variable (e.g., SSH_KNOWN_HOSTS) and add it:
    #    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    #    - chmod 644 ~/.ssh/known_hosts
    #    Then you can remove StrictHostKeyChecking no from ~/.ssh/config

    # 6. Login to Docker Registry (using IP as before)
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" 192.168.50.187

# Modify the actual clone step if necessary (GitLab runner usually handles it automatically
# using CI_REPOSITORY_URL, but we are overriding implicitly with before_script setup)
# The runner should now attempt SSH clone because of the ssh-agent setup.
# If it still tries HTTP, you might need to explicitly set CI_REPOSITORY_URL:
# variables:
#   CI_REPOSITORY_URL: ${CI_SSH_REPOSITORY_URL}

build_medusa:
  stage: build
  script:
    # The runner's default clone should now use SSH because of before_script
    # If not, you might need to manually clone first:
    # - git clone ${CI_SSH_REPOSITORY_URL} . # Clone using SSH URL if runner default fails
    - cd medusa
    - >
      docker build \
        --tag "192.168.50.187/$CI_PROJECT_PATH/medusa:$CI_COMMIT_SHORT_SHA" \
        --tag "192.168.50.187/$CI_PROJECT_PATH/medusa:latest" \
        .
    - docker push "192.168.50.187/$CI_PROJECT_PATH/medusa:$CI_COMMIT_SHORT_SHA"
    - docker push "192.168.50.187/$CI_PROJECT_PATH/medusa:latest"
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - medusa/**/*

build_storefront:
  stage: build
  script:
    # The runner's default clone should now use SSH because of before_script
    # If not, you might need to manually clone first:
    # - git clone ${CI_SSH_REPOSITORY_URL} . # Clone using SSH URL if runner default fails
    - cd storefront
    - >
      docker build \
        --build-arg NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY=$NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY \
        --build-arg NEXT_PUBLIC_SEARCH_API_KEY=$NEXT_PUBLIC_SEARCH_API_KEY \
        --tag "192.168.50.187/$CI_PROJECT_PATH/storefront:$CI_COMMIT_SHORT_SHA" \
        --tag "192.168.50.187/$CI_PROJECT_PATH/storefront:latest" \
        .
    - docker push "192.168.50.187/$CI_PROJECT_PATH/storefront:$CI_COMMIT_SHORT_SHA"
    - docker push "192.168.50.187/$CI_PROJECT_PATH/storefront:latest"
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - storefront/**/*
