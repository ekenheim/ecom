workflow:
  rules:
    - if: $CI_COMMIT_TAG  # Create a pipeline if a tag is pushed
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH # Otherwise, create a pipeline if it's a push to the default branch

variables:
  # --- SSH Settings ---
  CI_SSH_REPOSITORY_URL: ssh://git@gitlab-gitlab-shell.development.svc.cluster.local:22/${CI_PROJECT_PATH}.git
  GIT_DEPTH: 20
  GIT_STRATEGY: none

  # --- Docker Settings ---
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  # *** Use the EXTERNAL/INGRESS Registry Address ***
  # The Ingress handles TLS termination for this hostname
  REGISTRY_ADDRESS: registry.ekenhome.se

services:
  # Use standard docker:dind - no need for --insecure-registry when using HTTPS Ingress
  - name: docker:dind

stages:
  - build

default:
  image: docker:latest
  tags:
    - k8s
  before_script:
    # --- SSH Setup ---
    - apk add --no-cache openssh-client git

    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\\n\\tStrictHostKeyChecking no\\n\\tUserKnownHostsFile /dev/null" > ~/.ssh/config

    # --- Docker Login ---
    # No need for client insecure config anymore
    - sleep 5 # Wait for dind
    # *** Login using the secure Ingress address ***
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "${REGISTRY_ADDRESS}"

# --- Build Jobs ---
build_medusa:
  stage: build
  script:
    # Explicitly clone using SSH URL and configured agent
    - git clone ${CI_SSH_REPOSITORY_URL} . --depth ${GIT_DEPTH:-20}
    # Proceed with build steps
    - cd medusa
    # *** Use the secure Ingress address in tags ***
    - >
      docker build \
        --tag "${REGISTRY_ADDRESS}/${CI_PROJECT_PATH}/medusa:$CI_COMMIT_SHORT_SHA" \
        --tag "${REGISTRY_ADDRESS}/${CI_PROJECT_PATH}/medusa:latest" \
        .
    # *** Use the secure Ingress address for push ***
    - docker push "${REGISTRY_ADDRESS}/${CI_PROJECT_PATH}/medusa:$CI_COMMIT_SHORT_SHA"
    - docker push "${REGISTRY_ADDRESS}/${CI_PROJECT_PATH}/medusa:latest"
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - medusa/**/*

build_storefront:
  stage: build
  script:
    # Explicitly clone using SSH URL and configured agent
    - git clone ${CI_SSH_REPOSITORY_URL} . --depth ${GIT_DEPTH:-20}
    # Proceed with build steps
    - cd storefront
    # *** Use the secure Ingress address in tags ***
    - >
      docker build \
        --build-arg NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY=$NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY \
        --build-arg NEXT_PUBLIC_SEARCH_API_KEY=$NEXT_PUBLIC_SEARCH_API_KEY \
        --tag "${REGISTRY_ADDRESS}/${CI_PROJECT_PATH}/storefront:$CI_COMMIT_SHORT_SHA" \
        --tag "${REGISTRY_ADDRESS}/${CI_PROJECT_PATH}/storefront:latest" \
        .
    # *** Use the secure Ingress address for push ***
    - docker push "${REGISTRY_ADDRESS}/${CI_PROJECT_PATH}/storefront:$CI_COMMIT_SHORT_SHA"
    - docker push "${REGISTRY_ADDRESS}/${CI_PROJECT_PATH}/storefront:latest"
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - storefront/**/*
